# ng-app

    Normalmente utilzado na tag <html>


#ng-controller

    O local aonde você colocar o atreibuto ng-controller automaticamente se torna a view, pois a view não é um arquivo, nada mais é que um conjunto de tags.
    Você pode ter no mesmo arquivo, vários 'ng-controller'.
    O mesmo pode ser utilizado em qualquer tag, como por exemplo no <body> ou em uma <div>


# ng-bind

    Substitui elementos por expressões.
    Ou seja, se você tive '$scope.app = "Phone List"', e fizer <h4 ng-bind="app"></h4>, "Phone List" será impresso na tela.
    Porém, você pode utilizar a interpolação, por exemplo: <h4>{{app}}</h4>, que terá o mesmo efeito.


# ng-repeat

    Iterando sobre os itens de uma coleção ou de um objeto.

# ng-model

    Faz o contrário do ng-bind, ou seja, pega uma coisa da view e DEFINE no $scope.

# ng-click

    Basicamente é um evento, igual ao onClick, onBlur etc...


# OBS IMPORTANTE:

    Evitar de ler o $scope dentro do controller.


# ng-disabled

    Disabilitar um elemento dinamicamente.


# ng-options

    Renderiza as opções de um select.
    Sempre deve ser utilizada juntamente com ng-model.


# ng-class - ng-style

    Aplicando CSS e estilos dinamicamente.


# ng-hide - ng-show - ng-if

    Apresenta elementos de forma condicional.

    A diferença entre eles é que o ng-hide e ng-show trabalham somente com a
    visibilidade, ou seja, trabalham a nivel de css para apresentar ou esconder
    o elemento.

    O ng-if trabalha a nível de dom, ou seja, ele remove o elemento do dom e cria
    o elemento no dom novamente. Visualmente o comportamento é igual, porém tudo
    dependo do caso que você vai utilizar.

    O ng-if é muito útil quando não queremos carregar muito a página sem a nacessidade.


# ng-include

    Incluir conteúdo dinamicamente.



#### Form validation

        # ng-required

            Determina obrigatoriedade e um determinado campo de um fomulário.

            Necessário usar <form> e declarar um name, ou seja, <form name="contactForm">

            O que ocorrerá é que o angular vai construir um objeto chamado contactForm
            contendo todas as regras do formulário, como por exemplo os campos que estão
            como required.


            $valid - $invalid

              Verifica se o objeto declarado no <form> criado pelo angular está válido
              ou inválido de acordo com suas regras de required.

            $pristine - $dirty

              Verifica se um formulário ou campo já foi utilizado alguma vez.


        # ng-minlength - ng-maxlength

            Valida quanto a tamanho mínimo e maximo de uma campo.

            Lembrando que não é uma mascara, ou seja, não vai impedir de incluir menos
            que o minimo ou mais que o máximo, porém será utilizado para validar se
            é valido ou não.


        # ng-pattern

            Define uma RegExp para validar um campo.


                  ##### Form Properties

                  Para estas propriedades é necessário utilizar a tag <form> dando um name para
                  a mesma, ou seja <form name="nameForm">

                            # $valid - $invalid

                              Consultar a validade de um campo ou do form inteiro.


                            # $pristine - $dirty

                              Verifica se um formulário ou campo já foi utilizado alguma vez.


                            # $error

                              É um objeto que contem as validações e seus respectivos status.

                              No caso de termos mais de um tipo de validação em um campo, como por exemplo
                              required e minlength, o $valid ou $invalid não serve, pois precisamos mostrar
                              alertas diferentes por exemplo.

                              Neste caso utilizamos o $error, na qual podemos verificar cada uma das
                              validações de forma independente, possibilitando a apresentação de mensagem
                              diferentes.




##### Filtros

  Transformam o resultado de uma expressão, realizando operações como a
  formatação de data, a conversão de moeda e a ordenação de Array.

  # uppercase - lowercase

      Alterar uma string para maiúscula ou minúscula.

  # date

      Formata uma data usando usando uma máscara.

  # filter

      Filtra um array com base em um critério.
